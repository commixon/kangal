name: "Testing"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup buf
        uses: wizhi/setup-buf@v1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
        with:
          version: 0.31.1

      - name: Install Protoc deps
        run: make protoc

      - name: Lint ProtoBuf
        run: buf check lint --config=./.github/buf.yaml

      # next three actions replace golangci/golangci-lint-action@v2 to make golangci work
      # with deps already preinstalled, otherwise it fails with bunch of errors like
      # "/bin/tar: ../../../go/pkg/mod/...: Cannot open: File exists"
      # found solution at https://github.com/golangci/golangci-lint-action/issues/81
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install golangci linter
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.33.0

      - name: Run golangci linter
        run: ./bin/golangci-lint run ./...

      - name: Lint GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          args: --skip-publish --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch history for helm linter
        run: git fetch --prune --unshallow

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.3.4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1
        with:
          version: v3.3.0

      - name: Lint Helm
        run: ct lint --config .github/ct.yaml

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore: tools

      - name: Run OpenAPI Test
        uses: mbowman100/swagger-validator-action@master
        with:
          files: |
            openapi.json

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15'

      - name: Run Unit tests
        run: |
          make test-unit

      - name: Setup Kind
        uses: engineerd/setup-kind@v0.5.0

      - name: Install Kangal CRD
        run: |
          make apply-crd

      - name: Build Kangal
        run: |
          go mod vendor
          make build

      - name: Run Integration Tests
        env:
          AWS_ENDPOINT_URL: "localhost:8081"
          AWS_BUCKET_NAME: "kangal-test"
        run: |
          ./ci/integration-tests.sh

      - name: Upload codecov
        uses: codecov/codecov-action@v1
        if: success()
        with:
          file: ./coverage.txt
          fail_ci_if_error: false
